/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package schema;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class DataUnit extends org.apache.thrift.TUnion<DataUnit, DataUnit._Fields> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DataUnit");
  private static final org.apache.thrift.protocol.TField SUCURSAL_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("sucursal_property", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField BOLETA_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("boleta_property", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField PRODUCTO_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("producto_property", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField CATEGORIA_PROPERTY_FIELD_DESC = new org.apache.thrift.protocol.TField("categoria_property", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField CLIENTE_EMPLEADO_FIELD_DESC = new org.apache.thrift.protocol.TField("cliente_empleado", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField CLIENTE_SUCURSAL_FIELD_DESC = new org.apache.thrift.protocol.TField("cliente_sucursal", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField CLIENTE_BOLETA_FIELD_DESC = new org.apache.thrift.protocol.TField("cliente_boleta", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField CLIENTE_PRODUCTO_FIELD_DESC = new org.apache.thrift.protocol.TField("cliente_producto", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField CLIENTE_CATEGORIA_FIELD_DESC = new org.apache.thrift.protocol.TField("cliente_categoria", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField EMPLEADO_SUCURSAL_FIELD_DESC = new org.apache.thrift.protocol.TField("empleado_sucursal", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField EMPLEADO_BOLETA_FIELD_DESC = new org.apache.thrift.protocol.TField("empleado_boleta", org.apache.thrift.protocol.TType.STRUCT, (short)13);
  private static final org.apache.thrift.protocol.TField EMPLEADO_PRODUCTO_FIELD_DESC = new org.apache.thrift.protocol.TField("empleado_producto", org.apache.thrift.protocol.TType.STRUCT, (short)14);
  private static final org.apache.thrift.protocol.TField EMPLEADO_CATEGORIA_FIELD_DESC = new org.apache.thrift.protocol.TField("empleado_categoria", org.apache.thrift.protocol.TType.STRUCT, (short)15);
  private static final org.apache.thrift.protocol.TField SUCURSAL_BOLETA_FIELD_DESC = new org.apache.thrift.protocol.TField("sucursal_boleta", org.apache.thrift.protocol.TType.STRUCT, (short)16);
  private static final org.apache.thrift.protocol.TField SUCURSAL_PRODUCTO_FIELD_DESC = new org.apache.thrift.protocol.TField("sucursal_producto", org.apache.thrift.protocol.TType.STRUCT, (short)17);
  private static final org.apache.thrift.protocol.TField SUCURSAL_CATEGORIA_FIELD_DESC = new org.apache.thrift.protocol.TField("sucursal_categoria", org.apache.thrift.protocol.TType.STRUCT, (short)18);
  private static final org.apache.thrift.protocol.TField BOLETA_PRODUCTO_FIELD_DESC = new org.apache.thrift.protocol.TField("boleta_producto", org.apache.thrift.protocol.TType.STRUCT, (short)19);
  private static final org.apache.thrift.protocol.TField BOLETA_CATEGORIA_FIELD_DESC = new org.apache.thrift.protocol.TField("boleta_categoria", org.apache.thrift.protocol.TType.STRUCT, (short)20);
  private static final org.apache.thrift.protocol.TField PRODUCTO_CATEGORIA_FIELD_DESC = new org.apache.thrift.protocol.TField("producto_categoria", org.apache.thrift.protocol.TType.STRUCT, (short)21);

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SUCURSAL_PROPERTY((short)3, "sucursal_property"),
    BOLETA_PROPERTY((short)4, "boleta_property"),
    PRODUCTO_PROPERTY((short)5, "producto_property"),
    CATEGORIA_PROPERTY((short)6, "categoria_property"),
    CLIENTE_EMPLEADO((short)7, "cliente_empleado"),
    CLIENTE_SUCURSAL((short)8, "cliente_sucursal"),
    CLIENTE_BOLETA((short)9, "cliente_boleta"),
    CLIENTE_PRODUCTO((short)10, "cliente_producto"),
    CLIENTE_CATEGORIA((short)11, "cliente_categoria"),
    EMPLEADO_SUCURSAL((short)12, "empleado_sucursal"),
    EMPLEADO_BOLETA((short)13, "empleado_boleta"),
    EMPLEADO_PRODUCTO((short)14, "empleado_producto"),
    EMPLEADO_CATEGORIA((short)15, "empleado_categoria"),
    SUCURSAL_BOLETA((short)16, "sucursal_boleta"),
    SUCURSAL_PRODUCTO((short)17, "sucursal_producto"),
    SUCURSAL_CATEGORIA((short)18, "sucursal_categoria"),
    BOLETA_PRODUCTO((short)19, "boleta_producto"),
    BOLETA_CATEGORIA((short)20, "boleta_categoria"),
    PRODUCTO_CATEGORIA((short)21, "producto_categoria");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 3: // SUCURSAL_PROPERTY
          return SUCURSAL_PROPERTY;
        case 4: // BOLETA_PROPERTY
          return BOLETA_PROPERTY;
        case 5: // PRODUCTO_PROPERTY
          return PRODUCTO_PROPERTY;
        case 6: // CATEGORIA_PROPERTY
          return CATEGORIA_PROPERTY;
        case 7: // CLIENTE_EMPLEADO
          return CLIENTE_EMPLEADO;
        case 8: // CLIENTE_SUCURSAL
          return CLIENTE_SUCURSAL;
        case 9: // CLIENTE_BOLETA
          return CLIENTE_BOLETA;
        case 10: // CLIENTE_PRODUCTO
          return CLIENTE_PRODUCTO;
        case 11: // CLIENTE_CATEGORIA
          return CLIENTE_CATEGORIA;
        case 12: // EMPLEADO_SUCURSAL
          return EMPLEADO_SUCURSAL;
        case 13: // EMPLEADO_BOLETA
          return EMPLEADO_BOLETA;
        case 14: // EMPLEADO_PRODUCTO
          return EMPLEADO_PRODUCTO;
        case 15: // EMPLEADO_CATEGORIA
          return EMPLEADO_CATEGORIA;
        case 16: // SUCURSAL_BOLETA
          return SUCURSAL_BOLETA;
        case 17: // SUCURSAL_PRODUCTO
          return SUCURSAL_PRODUCTO;
        case 18: // SUCURSAL_CATEGORIA
          return SUCURSAL_CATEGORIA;
        case 19: // BOLETA_PRODUCTO
          return BOLETA_PRODUCTO;
        case 20: // BOLETA_CATEGORIA
          return BOLETA_CATEGORIA;
        case 21: // PRODUCTO_CATEGORIA
          return PRODUCTO_CATEGORIA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SUCURSAL_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("sucursal_property", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SucursalProperty.class)));
    tmpMap.put(_Fields.BOLETA_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("boleta_property", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BoletaProperty.class)));
    tmpMap.put(_Fields.PRODUCTO_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("producto_property", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductoProperty.class)));
    tmpMap.put(_Fields.CATEGORIA_PROPERTY, new org.apache.thrift.meta_data.FieldMetaData("categoria_property", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CategoriaProperty.class)));
    tmpMap.put(_Fields.CLIENTE_EMPLEADO, new org.apache.thrift.meta_data.FieldMetaData("cliente_empleado", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ClienteEmpleado.class)));
    tmpMap.put(_Fields.CLIENTE_SUCURSAL, new org.apache.thrift.meta_data.FieldMetaData("cliente_sucursal", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ClienteSucursal.class)));
    tmpMap.put(_Fields.CLIENTE_BOLETA, new org.apache.thrift.meta_data.FieldMetaData("cliente_boleta", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ClienteBoleta.class)));
    tmpMap.put(_Fields.CLIENTE_PRODUCTO, new org.apache.thrift.meta_data.FieldMetaData("cliente_producto", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ClienteProducto.class)));
    tmpMap.put(_Fields.CLIENTE_CATEGORIA, new org.apache.thrift.meta_data.FieldMetaData("cliente_categoria", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ClienteCategoria.class)));
    tmpMap.put(_Fields.EMPLEADO_SUCURSAL, new org.apache.thrift.meta_data.FieldMetaData("empleado_sucursal", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmpleadoSucursal.class)));
    tmpMap.put(_Fields.EMPLEADO_BOLETA, new org.apache.thrift.meta_data.FieldMetaData("empleado_boleta", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmpleadoBoleta.class)));
    tmpMap.put(_Fields.EMPLEADO_PRODUCTO, new org.apache.thrift.meta_data.FieldMetaData("empleado_producto", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmpleadoProducto.class)));
    tmpMap.put(_Fields.EMPLEADO_CATEGORIA, new org.apache.thrift.meta_data.FieldMetaData("empleado_categoria", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmpleadoCategoria.class)));
    tmpMap.put(_Fields.SUCURSAL_BOLETA, new org.apache.thrift.meta_data.FieldMetaData("sucursal_boleta", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SucursalBoleta.class)));
    tmpMap.put(_Fields.SUCURSAL_PRODUCTO, new org.apache.thrift.meta_data.FieldMetaData("sucursal_producto", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SucursalProducto.class)));
    tmpMap.put(_Fields.SUCURSAL_CATEGORIA, new org.apache.thrift.meta_data.FieldMetaData("sucursal_categoria", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SucursalCategoria.class)));
    tmpMap.put(_Fields.BOLETA_PRODUCTO, new org.apache.thrift.meta_data.FieldMetaData("boleta_producto", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BoletaProducto.class)));
    tmpMap.put(_Fields.BOLETA_CATEGORIA, new org.apache.thrift.meta_data.FieldMetaData("boleta_categoria", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BoletaCategoria.class)));
    tmpMap.put(_Fields.PRODUCTO_CATEGORIA, new org.apache.thrift.meta_data.FieldMetaData("producto_categoria", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductoCategoria.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(DataUnit.class, metaDataMap);
  }

  public DataUnit() {
    super();
  }

  public DataUnit(_Fields setField, java.lang.Object value) {
    super(setField, value);
  }

  public DataUnit(DataUnit other) {
    super(other);
  }
  public DataUnit deepCopy() {
    return new DataUnit(this);
  }

  public static DataUnit sucursal_property(SucursalProperty value) {
    DataUnit x = new DataUnit();
    x.setSucursal_property(value);
    return x;
  }

  public static DataUnit boleta_property(BoletaProperty value) {
    DataUnit x = new DataUnit();
    x.setBoleta_property(value);
    return x;
  }

  public static DataUnit producto_property(ProductoProperty value) {
    DataUnit x = new DataUnit();
    x.setProducto_property(value);
    return x;
  }

  public static DataUnit categoria_property(CategoriaProperty value) {
    DataUnit x = new DataUnit();
    x.setCategoria_property(value);
    return x;
  }

  public static DataUnit cliente_empleado(ClienteEmpleado value) {
    DataUnit x = new DataUnit();
    x.setCliente_empleado(value);
    return x;
  }

  public static DataUnit cliente_sucursal(ClienteSucursal value) {
    DataUnit x = new DataUnit();
    x.setCliente_sucursal(value);
    return x;
  }

  public static DataUnit cliente_boleta(ClienteBoleta value) {
    DataUnit x = new DataUnit();
    x.setCliente_boleta(value);
    return x;
  }

  public static DataUnit cliente_producto(ClienteProducto value) {
    DataUnit x = new DataUnit();
    x.setCliente_producto(value);
    return x;
  }

  public static DataUnit cliente_categoria(ClienteCategoria value) {
    DataUnit x = new DataUnit();
    x.setCliente_categoria(value);
    return x;
  }

  public static DataUnit empleado_sucursal(EmpleadoSucursal value) {
    DataUnit x = new DataUnit();
    x.setEmpleado_sucursal(value);
    return x;
  }

  public static DataUnit empleado_boleta(EmpleadoBoleta value) {
    DataUnit x = new DataUnit();
    x.setEmpleado_boleta(value);
    return x;
  }

  public static DataUnit empleado_producto(EmpleadoProducto value) {
    DataUnit x = new DataUnit();
    x.setEmpleado_producto(value);
    return x;
  }

  public static DataUnit empleado_categoria(EmpleadoCategoria value) {
    DataUnit x = new DataUnit();
    x.setEmpleado_categoria(value);
    return x;
  }

  public static DataUnit sucursal_boleta(SucursalBoleta value) {
    DataUnit x = new DataUnit();
    x.setSucursal_boleta(value);
    return x;
  }

  public static DataUnit sucursal_producto(SucursalProducto value) {
    DataUnit x = new DataUnit();
    x.setSucursal_producto(value);
    return x;
  }

  public static DataUnit sucursal_categoria(SucursalCategoria value) {
    DataUnit x = new DataUnit();
    x.setSucursal_categoria(value);
    return x;
  }

  public static DataUnit boleta_producto(BoletaProducto value) {
    DataUnit x = new DataUnit();
    x.setBoleta_producto(value);
    return x;
  }

  public static DataUnit boleta_categoria(BoletaCategoria value) {
    DataUnit x = new DataUnit();
    x.setBoleta_categoria(value);
    return x;
  }

  public static DataUnit producto_categoria(ProductoCategoria value) {
    DataUnit x = new DataUnit();
    x.setProducto_categoria(value);
    return x;
  }


  @Override
  protected void checkType(_Fields setField, java.lang.Object value) throws java.lang.ClassCastException {
    switch (setField) {
      case SUCURSAL_PROPERTY:
        if (value instanceof SucursalProperty) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type SucursalProperty for field 'sucursal_property', but got " + value.getClass().getSimpleName());
      case BOLETA_PROPERTY:
        if (value instanceof BoletaProperty) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type BoletaProperty for field 'boleta_property', but got " + value.getClass().getSimpleName());
      case PRODUCTO_PROPERTY:
        if (value instanceof ProductoProperty) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type ProductoProperty for field 'producto_property', but got " + value.getClass().getSimpleName());
      case CATEGORIA_PROPERTY:
        if (value instanceof CategoriaProperty) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type CategoriaProperty for field 'categoria_property', but got " + value.getClass().getSimpleName());
      case CLIENTE_EMPLEADO:
        if (value instanceof ClienteEmpleado) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type ClienteEmpleado for field 'cliente_empleado', but got " + value.getClass().getSimpleName());
      case CLIENTE_SUCURSAL:
        if (value instanceof ClienteSucursal) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type ClienteSucursal for field 'cliente_sucursal', but got " + value.getClass().getSimpleName());
      case CLIENTE_BOLETA:
        if (value instanceof ClienteBoleta) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type ClienteBoleta for field 'cliente_boleta', but got " + value.getClass().getSimpleName());
      case CLIENTE_PRODUCTO:
        if (value instanceof ClienteProducto) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type ClienteProducto for field 'cliente_producto', but got " + value.getClass().getSimpleName());
      case CLIENTE_CATEGORIA:
        if (value instanceof ClienteCategoria) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type ClienteCategoria for field 'cliente_categoria', but got " + value.getClass().getSimpleName());
      case EMPLEADO_SUCURSAL:
        if (value instanceof EmpleadoSucursal) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type EmpleadoSucursal for field 'empleado_sucursal', but got " + value.getClass().getSimpleName());
      case EMPLEADO_BOLETA:
        if (value instanceof EmpleadoBoleta) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type EmpleadoBoleta for field 'empleado_boleta', but got " + value.getClass().getSimpleName());
      case EMPLEADO_PRODUCTO:
        if (value instanceof EmpleadoProducto) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type EmpleadoProducto for field 'empleado_producto', but got " + value.getClass().getSimpleName());
      case EMPLEADO_CATEGORIA:
        if (value instanceof EmpleadoCategoria) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type EmpleadoCategoria for field 'empleado_categoria', but got " + value.getClass().getSimpleName());
      case SUCURSAL_BOLETA:
        if (value instanceof SucursalBoleta) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type SucursalBoleta for field 'sucursal_boleta', but got " + value.getClass().getSimpleName());
      case SUCURSAL_PRODUCTO:
        if (value instanceof SucursalProducto) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type SucursalProducto for field 'sucursal_producto', but got " + value.getClass().getSimpleName());
      case SUCURSAL_CATEGORIA:
        if (value instanceof SucursalCategoria) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type SucursalCategoria for field 'sucursal_categoria', but got " + value.getClass().getSimpleName());
      case BOLETA_PRODUCTO:
        if (value instanceof BoletaProducto) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type BoletaProducto for field 'boleta_producto', but got " + value.getClass().getSimpleName());
      case BOLETA_CATEGORIA:
        if (value instanceof BoletaCategoria) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type BoletaCategoria for field 'boleta_categoria', but got " + value.getClass().getSimpleName());
      case PRODUCTO_CATEGORIA:
        if (value instanceof ProductoCategoria) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type ProductoCategoria for field 'producto_categoria', but got " + value.getClass().getSimpleName());
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected java.lang.Object standardSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TField field) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(field.id);
    if (setField != null) {
      switch (setField) {
        case SUCURSAL_PROPERTY:
          if (field.type == SUCURSAL_PROPERTY_FIELD_DESC.type) {
            SucursalProperty sucursal_property;
            sucursal_property = new SucursalProperty();
            sucursal_property.read(iprot);
            return sucursal_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case BOLETA_PROPERTY:
          if (field.type == BOLETA_PROPERTY_FIELD_DESC.type) {
            BoletaProperty boleta_property;
            boleta_property = new BoletaProperty();
            boleta_property.read(iprot);
            return boleta_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case PRODUCTO_PROPERTY:
          if (field.type == PRODUCTO_PROPERTY_FIELD_DESC.type) {
            ProductoProperty producto_property;
            producto_property = new ProductoProperty();
            producto_property.read(iprot);
            return producto_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CATEGORIA_PROPERTY:
          if (field.type == CATEGORIA_PROPERTY_FIELD_DESC.type) {
            CategoriaProperty categoria_property;
            categoria_property = new CategoriaProperty();
            categoria_property.read(iprot);
            return categoria_property;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CLIENTE_EMPLEADO:
          if (field.type == CLIENTE_EMPLEADO_FIELD_DESC.type) {
            ClienteEmpleado cliente_empleado;
            cliente_empleado = new ClienteEmpleado();
            cliente_empleado.read(iprot);
            return cliente_empleado;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CLIENTE_SUCURSAL:
          if (field.type == CLIENTE_SUCURSAL_FIELD_DESC.type) {
            ClienteSucursal cliente_sucursal;
            cliente_sucursal = new ClienteSucursal();
            cliente_sucursal.read(iprot);
            return cliente_sucursal;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CLIENTE_BOLETA:
          if (field.type == CLIENTE_BOLETA_FIELD_DESC.type) {
            ClienteBoleta cliente_boleta;
            cliente_boleta = new ClienteBoleta();
            cliente_boleta.read(iprot);
            return cliente_boleta;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CLIENTE_PRODUCTO:
          if (field.type == CLIENTE_PRODUCTO_FIELD_DESC.type) {
            ClienteProducto cliente_producto;
            cliente_producto = new ClienteProducto();
            cliente_producto.read(iprot);
            return cliente_producto;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CLIENTE_CATEGORIA:
          if (field.type == CLIENTE_CATEGORIA_FIELD_DESC.type) {
            ClienteCategoria cliente_categoria;
            cliente_categoria = new ClienteCategoria();
            cliente_categoria.read(iprot);
            return cliente_categoria;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case EMPLEADO_SUCURSAL:
          if (field.type == EMPLEADO_SUCURSAL_FIELD_DESC.type) {
            EmpleadoSucursal empleado_sucursal;
            empleado_sucursal = new EmpleadoSucursal();
            empleado_sucursal.read(iprot);
            return empleado_sucursal;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case EMPLEADO_BOLETA:
          if (field.type == EMPLEADO_BOLETA_FIELD_DESC.type) {
            EmpleadoBoleta empleado_boleta;
            empleado_boleta = new EmpleadoBoleta();
            empleado_boleta.read(iprot);
            return empleado_boleta;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case EMPLEADO_PRODUCTO:
          if (field.type == EMPLEADO_PRODUCTO_FIELD_DESC.type) {
            EmpleadoProducto empleado_producto;
            empleado_producto = new EmpleadoProducto();
            empleado_producto.read(iprot);
            return empleado_producto;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case EMPLEADO_CATEGORIA:
          if (field.type == EMPLEADO_CATEGORIA_FIELD_DESC.type) {
            EmpleadoCategoria empleado_categoria;
            empleado_categoria = new EmpleadoCategoria();
            empleado_categoria.read(iprot);
            return empleado_categoria;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case SUCURSAL_BOLETA:
          if (field.type == SUCURSAL_BOLETA_FIELD_DESC.type) {
            SucursalBoleta sucursal_boleta;
            sucursal_boleta = new SucursalBoleta();
            sucursal_boleta.read(iprot);
            return sucursal_boleta;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case SUCURSAL_PRODUCTO:
          if (field.type == SUCURSAL_PRODUCTO_FIELD_DESC.type) {
            SucursalProducto sucursal_producto;
            sucursal_producto = new SucursalProducto();
            sucursal_producto.read(iprot);
            return sucursal_producto;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case SUCURSAL_CATEGORIA:
          if (field.type == SUCURSAL_CATEGORIA_FIELD_DESC.type) {
            SucursalCategoria sucursal_categoria;
            sucursal_categoria = new SucursalCategoria();
            sucursal_categoria.read(iprot);
            return sucursal_categoria;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case BOLETA_PRODUCTO:
          if (field.type == BOLETA_PRODUCTO_FIELD_DESC.type) {
            BoletaProducto boleta_producto;
            boleta_producto = new BoletaProducto();
            boleta_producto.read(iprot);
            return boleta_producto;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case BOLETA_CATEGORIA:
          if (field.type == BOLETA_CATEGORIA_FIELD_DESC.type) {
            BoletaCategoria boleta_categoria;
            boleta_categoria = new BoletaCategoria();
            boleta_categoria.read(iprot);
            return boleta_categoria;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case PRODUCTO_CATEGORIA:
          if (field.type == PRODUCTO_CATEGORIA_FIELD_DESC.type) {
            ProductoCategoria producto_categoria;
            producto_categoria = new ProductoCategoria();
            producto_categoria.read(iprot);
            return producto_categoria;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      return null;
    }
  }

  @Override
  protected void standardSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case SUCURSAL_PROPERTY:
        SucursalProperty sucursal_property = (SucursalProperty)value_;
        sucursal_property.write(oprot);
        return;
      case BOLETA_PROPERTY:
        BoletaProperty boleta_property = (BoletaProperty)value_;
        boleta_property.write(oprot);
        return;
      case PRODUCTO_PROPERTY:
        ProductoProperty producto_property = (ProductoProperty)value_;
        producto_property.write(oprot);
        return;
      case CATEGORIA_PROPERTY:
        CategoriaProperty categoria_property = (CategoriaProperty)value_;
        categoria_property.write(oprot);
        return;
      case CLIENTE_EMPLEADO:
        ClienteEmpleado cliente_empleado = (ClienteEmpleado)value_;
        cliente_empleado.write(oprot);
        return;
      case CLIENTE_SUCURSAL:
        ClienteSucursal cliente_sucursal = (ClienteSucursal)value_;
        cliente_sucursal.write(oprot);
        return;
      case CLIENTE_BOLETA:
        ClienteBoleta cliente_boleta = (ClienteBoleta)value_;
        cliente_boleta.write(oprot);
        return;
      case CLIENTE_PRODUCTO:
        ClienteProducto cliente_producto = (ClienteProducto)value_;
        cliente_producto.write(oprot);
        return;
      case CLIENTE_CATEGORIA:
        ClienteCategoria cliente_categoria = (ClienteCategoria)value_;
        cliente_categoria.write(oprot);
        return;
      case EMPLEADO_SUCURSAL:
        EmpleadoSucursal empleado_sucursal = (EmpleadoSucursal)value_;
        empleado_sucursal.write(oprot);
        return;
      case EMPLEADO_BOLETA:
        EmpleadoBoleta empleado_boleta = (EmpleadoBoleta)value_;
        empleado_boleta.write(oprot);
        return;
      case EMPLEADO_PRODUCTO:
        EmpleadoProducto empleado_producto = (EmpleadoProducto)value_;
        empleado_producto.write(oprot);
        return;
      case EMPLEADO_CATEGORIA:
        EmpleadoCategoria empleado_categoria = (EmpleadoCategoria)value_;
        empleado_categoria.write(oprot);
        return;
      case SUCURSAL_BOLETA:
        SucursalBoleta sucursal_boleta = (SucursalBoleta)value_;
        sucursal_boleta.write(oprot);
        return;
      case SUCURSAL_PRODUCTO:
        SucursalProducto sucursal_producto = (SucursalProducto)value_;
        sucursal_producto.write(oprot);
        return;
      case SUCURSAL_CATEGORIA:
        SucursalCategoria sucursal_categoria = (SucursalCategoria)value_;
        sucursal_categoria.write(oprot);
        return;
      case BOLETA_PRODUCTO:
        BoletaProducto boleta_producto = (BoletaProducto)value_;
        boleta_producto.write(oprot);
        return;
      case BOLETA_CATEGORIA:
        BoletaCategoria boleta_categoria = (BoletaCategoria)value_;
        boleta_categoria.write(oprot);
        return;
      case PRODUCTO_CATEGORIA:
        ProductoCategoria producto_categoria = (ProductoCategoria)value_;
        producto_categoria.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected java.lang.Object tupleSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, short fieldID) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(fieldID);
    if (setField != null) {
      switch (setField) {
        case SUCURSAL_PROPERTY:
          SucursalProperty sucursal_property;
          sucursal_property = new SucursalProperty();
          sucursal_property.read(iprot);
          return sucursal_property;
        case BOLETA_PROPERTY:
          BoletaProperty boleta_property;
          boleta_property = new BoletaProperty();
          boleta_property.read(iprot);
          return boleta_property;
        case PRODUCTO_PROPERTY:
          ProductoProperty producto_property;
          producto_property = new ProductoProperty();
          producto_property.read(iprot);
          return producto_property;
        case CATEGORIA_PROPERTY:
          CategoriaProperty categoria_property;
          categoria_property = new CategoriaProperty();
          categoria_property.read(iprot);
          return categoria_property;
        case CLIENTE_EMPLEADO:
          ClienteEmpleado cliente_empleado;
          cliente_empleado = new ClienteEmpleado();
          cliente_empleado.read(iprot);
          return cliente_empleado;
        case CLIENTE_SUCURSAL:
          ClienteSucursal cliente_sucursal;
          cliente_sucursal = new ClienteSucursal();
          cliente_sucursal.read(iprot);
          return cliente_sucursal;
        case CLIENTE_BOLETA:
          ClienteBoleta cliente_boleta;
          cliente_boleta = new ClienteBoleta();
          cliente_boleta.read(iprot);
          return cliente_boleta;
        case CLIENTE_PRODUCTO:
          ClienteProducto cliente_producto;
          cliente_producto = new ClienteProducto();
          cliente_producto.read(iprot);
          return cliente_producto;
        case CLIENTE_CATEGORIA:
          ClienteCategoria cliente_categoria;
          cliente_categoria = new ClienteCategoria();
          cliente_categoria.read(iprot);
          return cliente_categoria;
        case EMPLEADO_SUCURSAL:
          EmpleadoSucursal empleado_sucursal;
          empleado_sucursal = new EmpleadoSucursal();
          empleado_sucursal.read(iprot);
          return empleado_sucursal;
        case EMPLEADO_BOLETA:
          EmpleadoBoleta empleado_boleta;
          empleado_boleta = new EmpleadoBoleta();
          empleado_boleta.read(iprot);
          return empleado_boleta;
        case EMPLEADO_PRODUCTO:
          EmpleadoProducto empleado_producto;
          empleado_producto = new EmpleadoProducto();
          empleado_producto.read(iprot);
          return empleado_producto;
        case EMPLEADO_CATEGORIA:
          EmpleadoCategoria empleado_categoria;
          empleado_categoria = new EmpleadoCategoria();
          empleado_categoria.read(iprot);
          return empleado_categoria;
        case SUCURSAL_BOLETA:
          SucursalBoleta sucursal_boleta;
          sucursal_boleta = new SucursalBoleta();
          sucursal_boleta.read(iprot);
          return sucursal_boleta;
        case SUCURSAL_PRODUCTO:
          SucursalProducto sucursal_producto;
          sucursal_producto = new SucursalProducto();
          sucursal_producto.read(iprot);
          return sucursal_producto;
        case SUCURSAL_CATEGORIA:
          SucursalCategoria sucursal_categoria;
          sucursal_categoria = new SucursalCategoria();
          sucursal_categoria.read(iprot);
          return sucursal_categoria;
        case BOLETA_PRODUCTO:
          BoletaProducto boleta_producto;
          boleta_producto = new BoletaProducto();
          boleta_producto.read(iprot);
          return boleta_producto;
        case BOLETA_CATEGORIA:
          BoletaCategoria boleta_categoria;
          boleta_categoria = new BoletaCategoria();
          boleta_categoria.read(iprot);
          return boleta_categoria;
        case PRODUCTO_CATEGORIA:
          ProductoCategoria producto_categoria;
          producto_categoria = new ProductoCategoria();
          producto_categoria.read(iprot);
          return producto_categoria;
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      throw new org.apache.thrift.protocol.TProtocolException("Couldn't find a field with field id " + fieldID);
    }
  }

  @Override
  protected void tupleSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case SUCURSAL_PROPERTY:
        SucursalProperty sucursal_property = (SucursalProperty)value_;
        sucursal_property.write(oprot);
        return;
      case BOLETA_PROPERTY:
        BoletaProperty boleta_property = (BoletaProperty)value_;
        boleta_property.write(oprot);
        return;
      case PRODUCTO_PROPERTY:
        ProductoProperty producto_property = (ProductoProperty)value_;
        producto_property.write(oprot);
        return;
      case CATEGORIA_PROPERTY:
        CategoriaProperty categoria_property = (CategoriaProperty)value_;
        categoria_property.write(oprot);
        return;
      case CLIENTE_EMPLEADO:
        ClienteEmpleado cliente_empleado = (ClienteEmpleado)value_;
        cliente_empleado.write(oprot);
        return;
      case CLIENTE_SUCURSAL:
        ClienteSucursal cliente_sucursal = (ClienteSucursal)value_;
        cliente_sucursal.write(oprot);
        return;
      case CLIENTE_BOLETA:
        ClienteBoleta cliente_boleta = (ClienteBoleta)value_;
        cliente_boleta.write(oprot);
        return;
      case CLIENTE_PRODUCTO:
        ClienteProducto cliente_producto = (ClienteProducto)value_;
        cliente_producto.write(oprot);
        return;
      case CLIENTE_CATEGORIA:
        ClienteCategoria cliente_categoria = (ClienteCategoria)value_;
        cliente_categoria.write(oprot);
        return;
      case EMPLEADO_SUCURSAL:
        EmpleadoSucursal empleado_sucursal = (EmpleadoSucursal)value_;
        empleado_sucursal.write(oprot);
        return;
      case EMPLEADO_BOLETA:
        EmpleadoBoleta empleado_boleta = (EmpleadoBoleta)value_;
        empleado_boleta.write(oprot);
        return;
      case EMPLEADO_PRODUCTO:
        EmpleadoProducto empleado_producto = (EmpleadoProducto)value_;
        empleado_producto.write(oprot);
        return;
      case EMPLEADO_CATEGORIA:
        EmpleadoCategoria empleado_categoria = (EmpleadoCategoria)value_;
        empleado_categoria.write(oprot);
        return;
      case SUCURSAL_BOLETA:
        SucursalBoleta sucursal_boleta = (SucursalBoleta)value_;
        sucursal_boleta.write(oprot);
        return;
      case SUCURSAL_PRODUCTO:
        SucursalProducto sucursal_producto = (SucursalProducto)value_;
        sucursal_producto.write(oprot);
        return;
      case SUCURSAL_CATEGORIA:
        SucursalCategoria sucursal_categoria = (SucursalCategoria)value_;
        sucursal_categoria.write(oprot);
        return;
      case BOLETA_PRODUCTO:
        BoletaProducto boleta_producto = (BoletaProducto)value_;
        boleta_producto.write(oprot);
        return;
      case BOLETA_CATEGORIA:
        BoletaCategoria boleta_categoria = (BoletaCategoria)value_;
        boleta_categoria.write(oprot);
        return;
      case PRODUCTO_CATEGORIA:
        ProductoCategoria producto_categoria = (ProductoCategoria)value_;
        producto_categoria.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TField getFieldDesc(_Fields setField) {
    switch (setField) {
      case SUCURSAL_PROPERTY:
        return SUCURSAL_PROPERTY_FIELD_DESC;
      case BOLETA_PROPERTY:
        return BOLETA_PROPERTY_FIELD_DESC;
      case PRODUCTO_PROPERTY:
        return PRODUCTO_PROPERTY_FIELD_DESC;
      case CATEGORIA_PROPERTY:
        return CATEGORIA_PROPERTY_FIELD_DESC;
      case CLIENTE_EMPLEADO:
        return CLIENTE_EMPLEADO_FIELD_DESC;
      case CLIENTE_SUCURSAL:
        return CLIENTE_SUCURSAL_FIELD_DESC;
      case CLIENTE_BOLETA:
        return CLIENTE_BOLETA_FIELD_DESC;
      case CLIENTE_PRODUCTO:
        return CLIENTE_PRODUCTO_FIELD_DESC;
      case CLIENTE_CATEGORIA:
        return CLIENTE_CATEGORIA_FIELD_DESC;
      case EMPLEADO_SUCURSAL:
        return EMPLEADO_SUCURSAL_FIELD_DESC;
      case EMPLEADO_BOLETA:
        return EMPLEADO_BOLETA_FIELD_DESC;
      case EMPLEADO_PRODUCTO:
        return EMPLEADO_PRODUCTO_FIELD_DESC;
      case EMPLEADO_CATEGORIA:
        return EMPLEADO_CATEGORIA_FIELD_DESC;
      case SUCURSAL_BOLETA:
        return SUCURSAL_BOLETA_FIELD_DESC;
      case SUCURSAL_PRODUCTO:
        return SUCURSAL_PRODUCTO_FIELD_DESC;
      case SUCURSAL_CATEGORIA:
        return SUCURSAL_CATEGORIA_FIELD_DESC;
      case BOLETA_PRODUCTO:
        return BOLETA_PRODUCTO_FIELD_DESC;
      case BOLETA_CATEGORIA:
        return BOLETA_CATEGORIA_FIELD_DESC;
      case PRODUCTO_CATEGORIA:
        return PRODUCTO_CATEGORIA_FIELD_DESC;
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TStruct getStructDesc() {
    return STRUCT_DESC;
  }

  @Override
  protected _Fields enumForId(short id) {
    return _Fields.findByThriftIdOrThrow(id);
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public SucursalProperty getSucursal_property() {
    if (getSetField() == _Fields.SUCURSAL_PROPERTY) {
      return (SucursalProperty)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'sucursal_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setSucursal_property(SucursalProperty value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.SUCURSAL_PROPERTY;
    value_ = value;
  }

  public BoletaProperty getBoleta_property() {
    if (getSetField() == _Fields.BOLETA_PROPERTY) {
      return (BoletaProperty)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'boleta_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setBoleta_property(BoletaProperty value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.BOLETA_PROPERTY;
    value_ = value;
  }

  public ProductoProperty getProducto_property() {
    if (getSetField() == _Fields.PRODUCTO_PROPERTY) {
      return (ProductoProperty)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'producto_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setProducto_property(ProductoProperty value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.PRODUCTO_PROPERTY;
    value_ = value;
  }

  public CategoriaProperty getCategoria_property() {
    if (getSetField() == _Fields.CATEGORIA_PROPERTY) {
      return (CategoriaProperty)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'categoria_property' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setCategoria_property(CategoriaProperty value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.CATEGORIA_PROPERTY;
    value_ = value;
  }

  public ClienteEmpleado getCliente_empleado() {
    if (getSetField() == _Fields.CLIENTE_EMPLEADO) {
      return (ClienteEmpleado)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'cliente_empleado' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setCliente_empleado(ClienteEmpleado value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.CLIENTE_EMPLEADO;
    value_ = value;
  }

  public ClienteSucursal getCliente_sucursal() {
    if (getSetField() == _Fields.CLIENTE_SUCURSAL) {
      return (ClienteSucursal)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'cliente_sucursal' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setCliente_sucursal(ClienteSucursal value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.CLIENTE_SUCURSAL;
    value_ = value;
  }

  public ClienteBoleta getCliente_boleta() {
    if (getSetField() == _Fields.CLIENTE_BOLETA) {
      return (ClienteBoleta)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'cliente_boleta' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setCliente_boleta(ClienteBoleta value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.CLIENTE_BOLETA;
    value_ = value;
  }

  public ClienteProducto getCliente_producto() {
    if (getSetField() == _Fields.CLIENTE_PRODUCTO) {
      return (ClienteProducto)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'cliente_producto' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setCliente_producto(ClienteProducto value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.CLIENTE_PRODUCTO;
    value_ = value;
  }

  public ClienteCategoria getCliente_categoria() {
    if (getSetField() == _Fields.CLIENTE_CATEGORIA) {
      return (ClienteCategoria)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'cliente_categoria' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setCliente_categoria(ClienteCategoria value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.CLIENTE_CATEGORIA;
    value_ = value;
  }

  public EmpleadoSucursal getEmpleado_sucursal() {
    if (getSetField() == _Fields.EMPLEADO_SUCURSAL) {
      return (EmpleadoSucursal)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'empleado_sucursal' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEmpleado_sucursal(EmpleadoSucursal value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.EMPLEADO_SUCURSAL;
    value_ = value;
  }

  public EmpleadoBoleta getEmpleado_boleta() {
    if (getSetField() == _Fields.EMPLEADO_BOLETA) {
      return (EmpleadoBoleta)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'empleado_boleta' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEmpleado_boleta(EmpleadoBoleta value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.EMPLEADO_BOLETA;
    value_ = value;
  }

  public EmpleadoProducto getEmpleado_producto() {
    if (getSetField() == _Fields.EMPLEADO_PRODUCTO) {
      return (EmpleadoProducto)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'empleado_producto' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEmpleado_producto(EmpleadoProducto value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.EMPLEADO_PRODUCTO;
    value_ = value;
  }

  public EmpleadoCategoria getEmpleado_categoria() {
    if (getSetField() == _Fields.EMPLEADO_CATEGORIA) {
      return (EmpleadoCategoria)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'empleado_categoria' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEmpleado_categoria(EmpleadoCategoria value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.EMPLEADO_CATEGORIA;
    value_ = value;
  }

  public SucursalBoleta getSucursal_boleta() {
    if (getSetField() == _Fields.SUCURSAL_BOLETA) {
      return (SucursalBoleta)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'sucursal_boleta' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setSucursal_boleta(SucursalBoleta value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.SUCURSAL_BOLETA;
    value_ = value;
  }

  public SucursalProducto getSucursal_producto() {
    if (getSetField() == _Fields.SUCURSAL_PRODUCTO) {
      return (SucursalProducto)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'sucursal_producto' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setSucursal_producto(SucursalProducto value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.SUCURSAL_PRODUCTO;
    value_ = value;
  }

  public SucursalCategoria getSucursal_categoria() {
    if (getSetField() == _Fields.SUCURSAL_CATEGORIA) {
      return (SucursalCategoria)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'sucursal_categoria' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setSucursal_categoria(SucursalCategoria value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.SUCURSAL_CATEGORIA;
    value_ = value;
  }

  public BoletaProducto getBoleta_producto() {
    if (getSetField() == _Fields.BOLETA_PRODUCTO) {
      return (BoletaProducto)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'boleta_producto' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setBoleta_producto(BoletaProducto value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.BOLETA_PRODUCTO;
    value_ = value;
  }

  public BoletaCategoria getBoleta_categoria() {
    if (getSetField() == _Fields.BOLETA_CATEGORIA) {
      return (BoletaCategoria)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'boleta_categoria' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setBoleta_categoria(BoletaCategoria value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.BOLETA_CATEGORIA;
    value_ = value;
  }

  public ProductoCategoria getProducto_categoria() {
    if (getSetField() == _Fields.PRODUCTO_CATEGORIA) {
      return (ProductoCategoria)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'producto_categoria' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setProducto_categoria(ProductoCategoria value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.PRODUCTO_CATEGORIA;
    value_ = value;
  }

  public boolean isSetSucursal_property() {
    return setField_ == _Fields.SUCURSAL_PROPERTY;
  }


  public boolean isSetBoleta_property() {
    return setField_ == _Fields.BOLETA_PROPERTY;
  }


  public boolean isSetProducto_property() {
    return setField_ == _Fields.PRODUCTO_PROPERTY;
  }


  public boolean isSetCategoria_property() {
    return setField_ == _Fields.CATEGORIA_PROPERTY;
  }


  public boolean isSetCliente_empleado() {
    return setField_ == _Fields.CLIENTE_EMPLEADO;
  }


  public boolean isSetCliente_sucursal() {
    return setField_ == _Fields.CLIENTE_SUCURSAL;
  }


  public boolean isSetCliente_boleta() {
    return setField_ == _Fields.CLIENTE_BOLETA;
  }


  public boolean isSetCliente_producto() {
    return setField_ == _Fields.CLIENTE_PRODUCTO;
  }


  public boolean isSetCliente_categoria() {
    return setField_ == _Fields.CLIENTE_CATEGORIA;
  }


  public boolean isSetEmpleado_sucursal() {
    return setField_ == _Fields.EMPLEADO_SUCURSAL;
  }


  public boolean isSetEmpleado_boleta() {
    return setField_ == _Fields.EMPLEADO_BOLETA;
  }


  public boolean isSetEmpleado_producto() {
    return setField_ == _Fields.EMPLEADO_PRODUCTO;
  }


  public boolean isSetEmpleado_categoria() {
    return setField_ == _Fields.EMPLEADO_CATEGORIA;
  }


  public boolean isSetSucursal_boleta() {
    return setField_ == _Fields.SUCURSAL_BOLETA;
  }


  public boolean isSetSucursal_producto() {
    return setField_ == _Fields.SUCURSAL_PRODUCTO;
  }


  public boolean isSetSucursal_categoria() {
    return setField_ == _Fields.SUCURSAL_CATEGORIA;
  }


  public boolean isSetBoleta_producto() {
    return setField_ == _Fields.BOLETA_PRODUCTO;
  }


  public boolean isSetBoleta_categoria() {
    return setField_ == _Fields.BOLETA_CATEGORIA;
  }


  public boolean isSetProducto_categoria() {
    return setField_ == _Fields.PRODUCTO_CATEGORIA;
  }


  public boolean equals(java.lang.Object other) {
    if (other instanceof DataUnit) {
      return equals((DataUnit)other);
    } else {
      return false;
    }
  }

  public boolean equals(DataUnit other) {
    return other != null && getSetField() == other.getSetField() && getFieldValue().equals(other.getFieldValue());
  }

  @Override
  public int compareTo(DataUnit other) {
    int lastComparison = org.apache.thrift.TBaseHelper.compareTo(getSetField(), other.getSetField());
    if (lastComparison == 0) {
      return org.apache.thrift.TBaseHelper.compareTo(getFieldValue(), other.getFieldValue());
    }
    return lastComparison;
  }


  @Override
  public int hashCode() {
    java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>();
    list.add(this.getClass().getName());
    org.apache.thrift.TFieldIdEnum setField = getSetField();
    if (setField != null) {
      list.add(setField.getThriftFieldId());
      java.lang.Object value = getFieldValue();
      if (value instanceof org.apache.thrift.TEnum) {
        list.add(((org.apache.thrift.TEnum)getFieldValue()).getValue());
      } else {
        list.add(value);
      }
    }
    return list.hashCode();
  }
  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


}
